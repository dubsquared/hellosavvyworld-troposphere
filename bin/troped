#!/usr/bin/env ruby

require 'rubygems'
require 'sinatra'

require 'amqp'
require 'mongo'
require 'cloudfiles'

CONFIG_DIR = File.join(File.dirname(File.expand_path(__FILE__)), "..", "config")

MQ_CONF = YAML.load_file(File.join(CONFIG_DIR, "mq.yml"))["default"]

MONGO_CONF = YAML.load_file(File.join(CONFIG_DIR, "mongo.yml"))["default"]

CF_CONF = YAML.load_file(File.join(CONFIG_DIR, "cf.yml"))["default"]

def get_image_meta()
  mongo_db = Mongo::MongoClient.new(MONGO_CONF["host"], MONGO_CONF["port"]).db("meta")
  mongo_db.collection("images")
end

get '/images/' do
  output = "<html>\n"
  output += "  <body>\n"
  output += "    <ul>\n"

  get_image_meta.find.each do |item|
    output += "      <li class=\"image\">\n"
    output += "        <a href=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-orig\">\n"
    output += "          <img alt=\"#{item["md5"]}\" src=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-thumb\" \>\n"
    output += "        </a>\n"
    output += "      </li>\n"
  end

  output += "    </ul>\n"
  output += "  </body>\n"
  output += "</html>\n"
  output
end

get '/:user_id/token' do
  # TODO Add Auth stuffs here.
end

get '/:user_id/images/' do
  output = "<html>\n"
  output += "  <body>\n"
  output += "    <ul>\n"

  get_image_meta.find("author" => :user_id).each do |item|
    output += "      <li class=\"image\">\n"
    output += "        <a href=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-orig\">\n"
    output += "          <img alt=\"#{item["md5"]}\" src=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-thumb\" \>\n"
    output += "        </a>\n"
    output += "      </li>\n"
  end

  output += "    </ul>\n"
  output += "  </body>\n"
  output += "</html>\n"
  output
end

post '/:user_id/images/' do
  meta = get_metainformation_handle()

  information = {
    "width" => WIDTH,
    "height" => HEIGHT,
    "xresolution" => XRES,
    "yresolution" => YRES,
    "created_at" => Datetime.now,
    "modified_at" => nil,
    "artist" => :user,
  }

  # TODO Add message to queue.

  return coll.insert(information)
end

get '/:user_id/images/:image_id' do
  item = get_image_meta.find_one("_id" => :image_id)
  output = "<html>\n"
  output += "  <body>\n"
  output += "    <a href=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-orig\">\n"
  output += "      <img alt=\"#{item["md5"]}\" src=\"#{CF_CONF["cdn_uri"]}/#{item["author"]}/#{item["md5"]}-thumb\" \>\n"
  output += "    </a>\n"
  output += "  </body>\n"
  output += "</html>\n"
  output
end

delete '/:user_id/images/:image_id' do
  # TODO drop in queue to be deleted.
  meta = get_metainformation_handle()
end

